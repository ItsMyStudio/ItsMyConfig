#CI
name: Build ✨ ItsMyConfig ✨

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4

    # Cache Gradle dependencies and wrapper (skip for pull requests)
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      if: github.event_name != 'pull_request'
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Create Gradle Wrapper
      run: gradle wrapper

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build & Test
      run: ./gradlew shadowJar

    - name: Summarize Failed Tests
      if: failure()
      shell: bash
      run: |
        echo "## ❌ Failed Tests Summary" >> $GITHUB_STEP_SUMMARY

        REPO_URL="https://github.com/Itsme-to/ItsMyConfig/blob/main"
        TEST_SRC="core/src/test/java"
        declare -A seen=()

        mapfile -t files < <(find core/build/test-results/test/ -type f -name "*.xml")

        for file in "${files[@]}"; do
          # Get all failing testcases (by their position) using xmllint and XPath
          IFS=$'\n' read -d '' -r -a failing_test_indexes < <(
            xmllint --xpath 'count(//testcase[failure])' "$file" 2>/dev/null | xargs -I{} seq 1 {}
          )

          for index in "${failing_test_indexes[@]}"; do
            class=$(xmllint --xpath "string((//testcase[failure])[${index}]/@classname)" "$file")
            method=$(xmllint --xpath "string((//testcase[failure])[${index}]/@name)" "$file")
            failure=$(xmllint --xpath "string((//testcase[failure])[${index}]/failure)" "$file")
            type=$(xmllint --xpath "string((//testcase[failure])[${index}]/failure/@type)" "$file")

            [[ -z "$failure" ]] && failure="(no message)"
            [[ -z "$type" ]] && type="UnknownException"
            [[ -z "$method" ]] && method="(unknown method)"
            [[ -z "$class" ]] && class="(unknown class)"

            if [[ -z "${seen[$class]}" ]]; then
              echo "" >> $GITHUB_STEP_SUMMARY
              file_path="$TEST_SRC/${class//./\/}.java"
              echo "#### [$class]($REPO_URL/$file_path)" >> $GITHUB_STEP_SUMMARY
              seen[$class]=1
            fi

            if [[ "$type" == "org.opentest4j.AssertionFailedError" ]]; then
              echo "- **$method** → $failure" >> $GITHUB_STEP_SUMMARY
            else
              echo "- **$method** → $type: $failure" >> $GITHUB_STEP_SUMMARY
            fi
          done
        done

    - name: Extract version and commit hash
      run: |
        echo "PLUGIN_VERSION=$(grep 'version =' build.gradle | awk -F'\"' '{print $2}')" >> $GITHUB_ENV
        echo "COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

    - name: Upload JAR
      uses: actions/upload-artifact@v4
      with:
        name: itsmyconfig-${{ env.PLUGIN_VERSION }}-${{ env.COMMIT_HASH }}
        path: core/build/libs/*.jar
        retention-days: 30
